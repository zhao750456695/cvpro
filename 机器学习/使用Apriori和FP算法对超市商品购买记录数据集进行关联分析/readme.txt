1.apri.py是手敲的Apriori算法
  data.xls是原始数据
  data666.xls是经过处理的数据
  FP算法需要自行安装
  对超市商品购买记录数据集进行关联分析.py是主程序

2.文字描述
2.1.方案选择
    因为是进行关联分析，所以选择了Apriori算法和FP算法。
2.2.模型对比和选择
参数:
Apriori算法的参数：最小支持度0.4 最小可信度：0.7
FP算法的参数：最小支持度300

下面是结果：
>>>>>>>>>>>>>>> 使用FP_Growth_tree >>>>>>>>>>>>>>>>>>>>>
('常温熟食类,饮料', 337)
('散装休闲食品,饮料', 328)
('香烟,饮料', 311)
('进口食品,饮料', 307)
('糖果巧克力,饮料', 300)
5
FP_Growth_tree耗时： 0.0070002079010009766
>>>>>>>>>>>>>>> 使用Apriori >>>>>>>>>>>>>>>>>>>>>
[[frozenset({'常温熟食类'}), frozenset({'糖果巧克力'}), frozenset({'散装休闲食品'}), frozenset({'香烟'}), frozenset({'饮料'}), frozenset({'进口食品'})], [frozenset({'香烟', '饮料'}), frozenset({'散装休闲食品', '饮料'}), frozenset({'常温熟食类', '饮料'}), frozenset({'糖果巧克力', '饮料'}), frozenset({'进口食品', '饮料'})], []]
frozenset({'香烟'}) --> frozenset({'饮料'}) conf: 0.8497267759562842
frozenset({'散装休闲食品'}) --> frozenset({'饮料'}) conf: 0.8746666666666667
frozenset({'常温熟食类'}) --> frozenset({'饮料'}) conf: 0.9232876712328767
frozenset({'糖果巧克力'}) --> frozenset({'饮料'}) conf: 0.9174311926605504
frozenset({'进口食品'}) --> frozenset({'饮料'}) conf: 0.9331306990881459
[(frozenset({'香烟'}), frozenset({'饮料'}), 0.8497267759562842), (frozenset({'散装休闲食品'}), frozenset({'饮料'}), 0.8746666666666667), (frozenset({'常温熟食类'}), frozenset({'饮料'}), 0.9232876712328767), (frozenset({'糖果巧克力'}), frozenset({'饮料'}), 0.9174311926605504), (frozenset({'进口食品'}), frozenset({'饮料'}), 0.9331306990881459)]
Apriori耗时： 0.011000871658325195

经过两个算法的计算，得到的频繁项集是一样的，都显示('常温熟食类,饮料')，('散装休闲食品,饮料')，('香烟,饮料')，('进口食品,饮料')，('糖果巧克力,饮料')这五项是高度相关的。
在耗时方面，FP算法耗时明显比Apriori要小很多。
但是，Apriori算法提供的信息更丰富，有可信度，并直接显示了关联规则。倾向于选择Apriori算法，虽然耗时多一点，但也只是满了0.09秒，可以忽略不计。若数据量十分庞大，我们会选择FP算法。

